@use 'sass:math';
@use 'sass:map';
@use 'sass:list';
@use "sass:meta";

@use '../core/map' as *;

/// 媒体查询 (设备尺寸、分辨率、方向)
/// @mixin change-breakpoints($key, $point, $breakpoints)
/// @mixin respond-to($key, $breakpoints)
/// @mixin mq($min, $max, $orientation, $and, $media-type, $breakpoints)
///-----------------------------------------------------

/// 断点映射
/// @access private
$_breakpoints: (
  'mobile': 320px,
  'phablet': 480px,
  'tablet': 768px,
  'laptops': 1024px,
  'desktop': 1280px,
  'wide': 1680px
) !default;

/// 生成断点分段映射
/// @access private
/// @param {map} $breakpoints 断点映射
/// @return {map} 断点分段映射
/// @example results: (tablet: (480, 768), desktop: (992, 1200))
@function _breakpoints-segment($breakpoints: $_breakpoints) {
  $points: map-sort($breakpoints, null, descend);
  $results: ();
  $lastValue: null;

  @each $key, $point in $points {
    $value: if($lastValue, ($point, $lastValue), $point);
    $results: map-merge($results, ($key: $value));
    $lastValue: $point;
  }

  @return $results;
}

/// 更改断点 (新增,修改,删除,替换)
/// 1. $point存在为合并,否则为删除
/// 2. $key不存在为替换
/// @param {string} $key 断点名
/// @param {number} $point 断点
/// @param {map} $breakpoints 断点映射
/// @example scss
/// @include change-breakpoint('mobile', 480px);
@mixin change-breakpoints($key, $point: null, $breakpoints: $_breakpoints) {
  @if $key {
    @if $point {
      $_breakpoints: map-merge($breakpoints, ($key: $point)) !global;
    } @else {
      $_breakpoints: map-remove($breakpoints, $key) !global;
    }
  } @else {
    @if $breakpoints {
      $_breakpoints: $breakpoints !global;
    }
  }
}

/// 获取指定断点值
/// @access private
/// @param {string} $key 断点名
/// @param {map} $breakpoints 断点映射
@function _get-breakpoint($key, $breakpoints: $_breakpoints) {
  @if map-has-key($breakpoints, $key) {
    @return map-get($breakpoints, $key);
  } @else {
    @warn "[_get-breakpoint]: #{$key} wasn't found in $breakpoints.";
    @return null;
  }
}

/// 指定断点响应式
/// @param {string} $key 触发响应式的断点
/// @param {map} $breakpoints 断点映射
/// @example scss
/// @include respond-to('mobile') { font-size: 14px; };
/// -----------------------------------------------------
@mixin respond-to($key, $breakpoints: _breakpoints-segment($_breakpoints)) {
  $point: map-get($map: $breakpoints, $key: $key);
  @if meta.type-of($point) == 'list' {
    $min: list.nth($list: $point, $n: 1);
    $max: list.nth($list: $point, $n: 2);
    @media (min-width: $min) and (max-width: $max) {
      @content;
    }
  } @else {
    @media (min-width: $point) {
      @content;
    }
  }
}

/// 媒体查询
/// @param {number} $min 最小宽度
/// @param {number} $max 最大宽度
/// @param {string} $orientation 方向 [landscape, portrait]
/// @param {string} $and 其他条件
/// @param {string} $media-type 媒体类型
/// @param {map} $breakpoints 断点映射
/// @example scss
/// @include mq($min: 768px, $media-type: 'screen') { font-size: 20px; };
/// @reference 参考: https://github.com/sass-mq/sass-mq
/// -----------------------------------------------------
@mixin mq($min: false, $max: false, $orientation: false, $and: false, $media-type: 'all', $breakpoints: $_breakpoints) {
  $min-width: 0;
  $max-width: 0;
  $media-query: '';

  @if $min {
    @if meta.type-of($min) == number {
      $min-width: $min;
    } @else {
      $min-width: _get-breakpoint($min, $breakpoints);
    }
  }

  @if $max {
    @if meta.type-of($max) == number {
      $max-width: $max;
    } @else {
      $max-width: _get-breakpoint($max, $breakpoints) - 0.1px;
    }
  }

  @if $min-width != 0 {
    $media-query: '#{$media-query} and (min-width: #{$min-width})';
  }
  @if $max-width != 0 {
    $media-query: '#{$media-query} and (max-width: #{$max-width})';
  }
  @if $orientation == 'landscape' {
    $media-query: '#{$media-query} and (orientation: landscape)';
  } @else if $orientation == 'portrait' {
    $media-query: '#{$media-query} and (orientation: portrait)';
  }
  @if $and {
    $media-query: '#{$media-query} and #{$and}';
  }

  @if $media-type == 'all' and $media-query != '' {
    $media-type: '';
    $media-query: string.slice(unquote($media-query), 6); //删除 ' and '
  }

  @media #{$media-type + $media-query} {
    @content;
  }
}
